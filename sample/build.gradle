apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion compileSdk

  defaultConfig {
    applicationId "com.example.android.architecture.blueprints.todomvp"
    minSdkVersion minSdk
    targetSdkVersion targetSdk
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [
          "room.schemaLocation": "$projectDir/schemas".toString(),
          "room.incremental":"true",
          "room.expandProjection":"true"
        ]
      }
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  buildTypes {
    debug {
      minifyEnabled true
      useProguard true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
    }

    release {
      minifyEnabled true
      useProguard true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
    }
  }

  flavorDimensions "default"

  // If you need to add more flavors, consider using flavor dimensions.
  productFlavors {
    mock {
      dimension "default"
      applicationIdSuffix = ".mock"
    }
    prod {
      dimension "default"
    }
  }

  // Remove mockRelease as it's not needed.
  android.variantFilter { variant ->
    if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'mock') {
      variant.setIgnore(true)
    }
  }

  // Always show the result of every unit test, even if it passes.
  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation project(':archroid-runtime')
  kapt project(':archroid-compiler')

  implementation deps.kotlin.stdlib_jdk7

  // App dependencies
  implementation deps.androidx.appcompat
  implementation deps.androidx.cardview
  implementation deps.androidx.recyclerview
  implementation deps.androidx.room_runtime
  implementation deps.androidx.annotation
  implementation deps.androidx.legacy_support_v4
  implementation deps.androidx.test.espresso_idling_resource
  implementation deps.google.material
  implementation deps.google.guava
  kapt deps.androidx.room_compiler

  // Dependencies for local unit tests
  testImplementation deps.test.junit
  testImplementation deps.test.mockito_core
  testImplementation deps.test.hamcrest_all

  // Dependencies for Android unit tests
  androidTestImplementation deps.test.junit
  androidTestImplementation deps.test.mockito_core
  androidTestImplementation deps.test.dexmaker_mockito

  // Android Testing Support Library - Instrumented testing
  androidTestImplementation deps.androidx.test.runner
  androidTestImplementation deps.androidx.test.rules
  androidTestImplementation deps.androidx.test.room_testing
  androidTestImplementation deps.androidx.test.espresso_core
  androidTestImplementation deps.androidx.test.espresso_contrib
  androidTestImplementation deps.androidx.test.espresso_intents
  androidTestImplementation deps.androidx.test.idling_concurrent
  androidTestImplementation deps.androidx.test.espresso_idling_resource

  // Resolve conflicts between main and test APK:
  androidTestImplementation deps.androidx.annotation
  androidTestImplementation deps.androidx.legacy_support_v4
  androidTestImplementation deps.androidx.recyclerview
  androidTestImplementation deps.androidx.appcompat
  androidTestImplementation deps.google.material
}
